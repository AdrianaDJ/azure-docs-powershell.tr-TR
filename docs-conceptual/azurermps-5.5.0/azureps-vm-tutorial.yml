### YamlMime:Tutorial
title: "Azure PowerShell ile sanal makine oluşturma"
metadata:
  title: "Azure PowerShell ile sanal makine oluşturma"
  description: "Sanal makineler oluşturarak Azure PowerShell ile çalışmaya başlayın."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 20af779cd523c758d40e23d60eb989a4ef982d5c
  ms.translationtype: HT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 03/15/2018
items:
- durationInMinutes: 1
  content: "Bu öğreticide, Azure PowerShell ile sanal makine ayarlama işleminde yer alan adımların tümünü öğreneceksiniz. Öğreticide aynı zamanda çıktı sorguları, Azure kaynağı yeniden kullanımı ve kaynak temizleme de ele alınmaktadır.\n\nBu öğreticiyi Azure Cloud Shell üzerinden sunulan etkileşimli deneyimle tamamlayabilir veya [Azure PowerShell’i yerel olarak yükleyebilirsiniz](install-azurerm-ps.md).\n\nÖğretici metnini Azure Cloud Shell’e yapıştırmak için __Ctrl+Shift+V__ (macOS’ta __Cmd+Shift+V__) tuşlarını kullanın."
- durationInMinutes: 1
  title: "Oturum açma"
  content: "Azure PowerShell’in yerel bir yüklemesini kullanıyorsanız diğer adımları uygulamadan önce oturum açmanız gerekir.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nTerminalinizde görüntülenen adımları uygulayarak oturum açma işlemini tamamlayın."
- durationInMinutes: 1
  title: "Kaynak grubu oluşturma"
  content: "Azure’da tüm kaynaklar bir kaynak yönetimi grubunda ayrılır. Kaynak grupları, kaynaklar için mantıksal gruplamalar sağlar; bu da, kaynaklarla koleksiyon olarak çalışabilmeyi kolaylaştırır.\nBu öğreticide, oluşturulan kaynakların tümü `TutorialResources` adlı tek bir gruba dahil edilir.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: "VM için yönetici kimlik bilgileri oluşturma"
  content: "Yeni bir sanal makine oluşturabilmek için Windows VM’nin yönetici hesabının kullanıcı adını ve parolasını içeren bir kimlik bilgisi nesnesi oluşturmanız gerekir.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nİstendiğinde kullanıcı adını ve parolayı girin. Sonuçta elde edilen kimlik bilgisi nesnesi, bir sonraki adımda parametre olarak geçirilir.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: "Sanal makine oluşturma"
  content: "Azure’daki sanal makinelerin çok sayıda bağımlılığı vardır. Azure PowerShell, belirttiğiniz komut satırı bağımsız değişkenlerine göre bu kaynakları oluşturur. Okunabilirlik açısından, parametreleri Azure PowerShell cmdlet’lerine geçirmek için [PowerShell topluca geçirme](/powershell/module/microsoft.powershell.core/about/about_splatting) yöntemini kullanıyoruz.\n\nWindows çalıştıran yeni bir sanal makine oluşturun.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nVM oluşturulurken kullanılan yerel değerleri ve oluşturulan Azure kaynaklarını görebilirsiniz.\nPowerShell, aşağıda gösterildiği gibi bir ilerleme çubuğu görüntüler.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nVM hazır hale geldikten sonra Azure Portal’da veya \\$newVM1 değişkenini inceleyerek sonuçları görüntüleyebilirsiniz.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nKöşeli parantez içinde listelenen özellik değerleri, iç içe geçmiş nesnelerdir. Sonraki adımda size bu iç içe geçmiş nesnelerde belirli değerlerin nasıl görüntüleneceğini göstereceğiz."
- durationInMinutes: 5
  title: Sorgularla VM bilgilerini alma
  content: "Şimdi, yeni oluşturduğumuz VM'den biraz daha ayrıntılı bilgi alalım. Bu örnekte, oluşturduğumuz VM’nin ve yönetici hesabının Adını doğrulayacağız.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nAğ yapılandırması hakkında belirli bilgiler almak için diğer Azure PowerShell komutlarını kullanabiliriz.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nBu örnekte, \\$newVM1 nesnesini `Get-AzureRmNetworkInterface` cmdlet’ine göndermek için PowerShell işlem hattını kullanıyoruz. Sonuçta elde edilen ağ arabirimi nesnesinden, iç içe geçmiş IpConfigurations nesnesini seçiyoruz. IpConfigurations nesnesinden Name ve PrivateIpAddress özelliklerini seçiyoruz.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nVM’nin çalışır durumda olduğunu doğrulamak için Uzak Masaüstü aracılığıyla bağlantı kurmamız gerekiyor. Bunun için Genel IP adresini bilmemiz gerekir.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nBu örnekte `Get-AzureRmPublicIpAddress` kullanıyoruz ve sonuçları \\$publicIp değişkeninde depoluyoruz. Bu değişkenden özellikleri seçiyoruz ve iç içe geçmiş Fqdn özelliğini almak için bir ifadeyi kullanıyoruz.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nVM’ye Uzak Masaüstü aracılığıyla bağlanmak için yerel makinenizden aşağıdaki komutu çalıştırabilirsiniz.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nNesne özelliklerini sorgulama hakkında daha fazla bilgi için bkz. [Azure kaynakları için sorgulama](./queries-azureps.md)."
- durationInMinutes: 4
  title: "Mevcut alt ağda yeni bir VM oluşturma"
  content: "İkinci VM mevcut alt ağı kullanır.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nGenel IP adresi \\$newVM2 nesnesinin FullyQualifiedDomainName özelliğinde döndürüldüğünden, yeni VM’nin genel IP adresini almaya yönelik birkaç adımı atlayabilirsiniz. Uzak Masaüstü kullanarak bağlantı kurmak için aşağıdaki komutu kullanın.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: Temizleme
  content: "Öğretici tamamlandığına göre oluşturulan kaynakları temizlemenin zamanı geldi. `Remove-AzureRmResource` komutuyla kaynakları tek tek silebilirsiniz ancak bir kaynak grubundaki tüm kaynakları kaldırmanın en güvenli yolu `Remove-AzureRmResourceGroup` komutunu kullanarak grubu silmektir.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nBu komut, öğretici sırasında oluşturulan kaynakları siler ve bunların doğru sırada serbest bırakılmasını sağlar. Silme işlemi gerçekleşirken `-AsJob` parametresi, PowerShell’in engellenmesini önler. Silme işlemi tamamlanana kadar bekleyin ve aşağıdaki komutu kullanın:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nTemizleme tamamlandığında öğretici sona erer. Öğrendiklerinizin özeti üzerinden geçmek ve sonraki adımlar konusunda size yardımcı olacak kaynakların bağlantılarını görüntülemek için devam edin."
- durationInMinutes: 1
  title: "Özet"
  content: "\nTebrikler! Yeni veya mevcut kaynaklarla VM oluşturmayı öğrendiniz, kabuk değişkenlerinde depolanacak verileri yakalamak için ifadeleri ve diğer Azure PowerShell komutlarını kullandınız, Azure VM’leri için oluşturulan bazı kaynaklara göz attınız.\n\nBu noktadan itibaren izleyeceğiniz rota Azure PowerShell’i nasıl kullanmayı planladığınıza bağlıdır. Bu öğreticide ele alınan özelliklerin daha kapsamlı olarak incelendiği çok sayıda kaynak mevcuttur.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Ayrıntılı Azure PowerShell belgeleri\n\nBiraz zaman ayırıp [Azure PowerShell belgelerinin](overview.md) tamamını isteyebilirsiniz.\n\nBu öğreticide kullanılan komutlar hakkında daha fazla bilgi için aşağıdaki makalelere bakın.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nÖğreticide gösterilen özelliklerin ayrıntılarının incelendiği makaleler de mevcuttur.\n\n- [PowerShell topluca geçirme](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Sorgular](queries-azureps.md)\n- [Biçimlendirme](formatting-output.md)\n- [PowerShell işlerini kullanma](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Örnek komut dosyaları\n\nBelirli görevlerle hızlı bir başlangıç yapmak istiyorsanız bazı örnek betiklere göz atın.\n\n- [Linux Sanal Makineleri](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Windows Sanal Makineleri](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Web Apps](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [SQL Veritabanları](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Geri Bildirim\n\nGeri bildirim vermek, öneride bulunmak veya soru sormak istiyorsanız çeşitli şekillerde iletişime geçebilirsiniz.\n\n* `Send-Feedback`, Azure PowerShell için takıma serbest biçimli geri bildirim sağlamanıza olanak tanıyan yerleşik bir komuttur.\n* [Azure PowerShell deposuna](https://github.com/Azure/azure-powershell/issues) bir özellik isteği veya hata raporu kaydedin.\n* [Azure PowerShell belge deposuna](https://github.com/Azure/azure-docs-powershell/issues) bir sorun kaydederek soru sorun veya açıklama alın.\n\nAzure PowerShell’i keyifle kullandığınızı umuyoruz!"
